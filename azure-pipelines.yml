# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

variables:
  TEST_FLAG: "true"
  DOCKER_BUILDKIT: 1

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Testflow
    jobs:
    - job: Test
      strategy:
        matrix:
          Python39:
            python.version: '3.9'

      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
        displayName: 'Use Python $(python.version)'

      - script: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        displayName: 'Install dependencies'

      - script: |
          pip install pytest pytest-azurepipelines pytest-sanic pytest-cov
          pytest --cov=./
        displayName: 'Test with pytest and generate coverage report'

      - script: |
          bash <(curl -s https://codecov.io/bash)
        displayName: 'Upload coverage to Codecov'

    - job: Artifact
      dependsOn: Test
      condition: eq(variables['Build.SourceBranchName'], 'main')
      steps:
        - task: ArchiveFiles@2
          inputs:
            rootFolderOrFile: '$(Build.SourcesDirectory)'
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
            replaceExistingArchive: true
        - publish: $(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip
          displayName: 'Upload package'
          artifact: drop
          
  - stage: Docker
    dependsOn: Testflow
    jobs:
      - job: Build
        steps:
        - task: Docker@2
          displayName: Build an image
          inputs:
            repository: Heliotrope
            command: build
            Dockerfile: ./Dockerfile
